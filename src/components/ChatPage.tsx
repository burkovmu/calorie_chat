'use client';

import { useState, useEffect } from 'react';
import { useChatStore } from '@/lib/store';
import MessageList from './MessageList';
import ChatInput from './ChatInput';
import MealCard from './MealCard';
import { Meal } from '@/types';

export default function ChatPage() {
  const { 
    messages, 
    pendingMeal, 
    isLoading, 
    error,
    addMessage, 
    setPendingMeal, 
    setLoading, 
    setError 
  } = useChatStore();

  // –ò—Å–ø–æ–ª—å–∑—É–µ–º UUID –¥–ª—è –¥–µ–º–æ-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ —ç—Ç–æ –±—É–¥–µ—Ç ID –∏–∑ Supabase Auth)
  const [userId] = useState('550e8400-e29b-41d4-a716-446655440000');

  useEffect(() => {
    // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if (messages.length === 0) {
      addMessage({
        role: 'assistant',
        text: '–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –ø–æ–¥—Å—á–∏—Ç–∞—Ç—å –∫–∞–ª–æ—Ä–∏–∏. –ü—Ä–æ—Å—Ç–æ –æ–ø–∏—à–∏, —á—Ç–æ —Ç—ã —Å—ä–µ–ª, –∏ —è –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É—é —ç—Ç–æ –¥–ª—è —Ç–µ–±—è.'
      });
    }
  }, [messages.length, addMessage]);

  const handleSend = async (text: string) => {
    if (!text.trim()) return;

    // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    addMessage({ role: 'user', text });
    setLoading(true);
    setError(null);

    try {
      const response = await fetch('/api/analyze', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ text })
      });

      const data = await response.json();

      if (!response.ok) {
        throw new Error(data.error || '–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞');
      }

      // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ò–ò
      addMessage({ 
        role: 'assistant', 
        text: data.displayText,
        meta: { mealData: data.mealData }
      });

      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º pending meal –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
      setPendingMeal(data.mealData);

    } catch (err) {
      const errorMessage = err instanceof Error ? err.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞';
      setError(errorMessage);
      addMessage({ 
        role: 'assistant', 
        text: `–ò–∑–≤–∏–Ω–∏, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: ${errorMessage}. –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ–ø–∏—à–∏ –µ–¥—É –ø–æ-–¥—Ä—É–≥–æ–º—É.`
      });
    } finally {
      setLoading(false);
    }
  };

  const handleConfirm = async () => {
    if (!pendingMeal) return;

    setLoading(true);
    setError(null);

    try {
      const response = await fetch('/api/saveMeal', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ 
          userId, 
          mealData: pendingMeal 
        })
      });

      const data = await response.json();

      if (!response.ok) {
        throw new Error(data.error || '–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è');
      }

      // –î–æ–±–∞–≤–ª—è–µ–º —Å–∏—Å—Ç–µ–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏
      addMessage({ 
        role: 'system', 
        text: `‚úÖ –ü—Ä–∏–µ–º –ø–∏—â–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –¥–Ω–µ–≤–Ω–∏–∫! –í—Å–µ–≥–æ –∫–∞–ª–æ—Ä–∏–π: ${pendingMeal.total_calories} –∫–∫–∞–ª` 
      });

      // –û—á–∏—â–∞–µ–º pending meal
      setPendingMeal(null);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:', error);
      setError(error instanceof Error ? error.message : '–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è');
    } finally {
      setLoading(false);
    }
  };

  const handleEdit = (updatedMeal: Meal) => {
    setPendingMeal(updatedMeal);
  };

  return (
    <div className="flex flex-col h-screen h-dvh bg-gray-50 safe-area">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ - –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–π –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö */}
      <div className="bg-white border-b border-gray-200 px-4 sm:px-6 py-3 sm:py-4 safe-top">
        <h1 className="text-xl sm:text-2xl font-bold text-gray-900 text-center sm:text-left">
          üçΩÔ∏è Calorie Chat AI
        </h1>
        <p className="text-sm sm:text-base text-gray-600 mt-1 text-center sm:text-left">
          –û–ø–∏—à–∏ —á—Ç–æ —Å—ä–µ–ª, –∏ –ò–ò –ø–æ–¥—Å—á–∏—Ç–∞–µ—Ç –∫–∞–ª–æ—Ä–∏–∏
        </p>
      </div>

      {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
      <div className="flex-1 flex flex-col overflow-hidden">
        {/* –°–ø–∏—Å–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏–π */}
        <div className="flex-1 overflow-y-auto px-3 sm:px-6 py-3 sm:py-4 swipe-area">
          <MessageList messages={messages} />
          
          {/* –ö–∞—Ä—Ç–æ—á–∫–∞ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –∞–Ω–∞–ª–∏–∑–∞ */}
          {pendingMeal && (
            <div className="mt-4 animate-slide-up">
              <MealCard 
                meal={pendingMeal} 
                onConfirm={handleConfirm}
                onEdit={handleEdit}
                isLoading={isLoading}
              />
            </div>
          )}

          {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ */}
          {isLoading && (
            <div className="flex justify-center items-center py-4">
              <div className="animate-spin rounded-full h-6 w-6 sm:h-8 sm:w-8 border-b-2 border-primary-500"></div>
              <span className="ml-2 text-sm sm:text-base text-gray-600">–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é...</span>
            </div>
          )}

          {/* –û—à–∏–±–∫–∞ */}
          {error && (
            <div className="bg-red-50 border border-red-200 rounded-lg p-3 sm:p-4 mt-4 mx-2 sm:mx-0">
              <p className="text-sm sm:text-base text-red-800">{error}</p>
            </div>
          )}
        </div>

        {/* –ü–æ–ª–µ –≤–≤–æ–¥–∞ - –∞–¥–∞–ø—Ç–∏–≤–Ω–æ–µ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö */}
        <div className="border-t border-gray-200 bg-white p-3 sm:p-6 safe-bottom">
          <ChatInput onSend={handleSend} disabled={isLoading} />
        </div>
      </div>
    </div>
  );
} 